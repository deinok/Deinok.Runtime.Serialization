version: 2
jobs:
  build:
    working_directory: ~/Deinok.Runtime.Serialization/
    docker:
      - image: microsoft/dotnet:1.1-sdk
    steps:
      - checkout

      - restore_cache:
          key: Deinok.Runtime.Serialization

      # Compile
      - run: 
          name: Clean
          command: dotnet clean
      - run: 
          name: Restore
          command: dotnet restore
      - run:
          name: Build
          command: dotnet build
      
      - save_cache:
          key: Deinok.Runtime.Serialization
          paths:
            - ~/.nuget/

      # Test
      - run: dotnet test ./tests/Deinok.Runtime.Serialization.Tests/Deinok.Runtime.Serialization.Tests.csproj
      - run: dotnet test ./tests/Deinok.Runtime.Serialization.Base64.Tests/Deinok.Runtime.Serialization.Base64.Tests.csproj
      - run: dotnet test ./tests/Deinok.Runtime.Serialization.Bson.Tests/Deinok.Runtime.Serialization.Bson.Tests.csproj
      - run: dotnet test ./tests/Deinok.Runtime.Serialization.Json.Tests/Deinok.Runtime.Serialization.Json.Tests.csproj
      
      - store_artifacts:
          path: ./src/Deinok.Runtime.Serialization/bin/Debug/Deinok.Runtime.Serialization.1.0.0.nupkg
          destination: Deinok.Runtime.Serialization.nupkg

      - deploy:
          name: MyGet
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              dotnet nuget push ./src/Deinok.Runtime.Serialization/bin/Debug/Deinok.Runtime.Serialization.1.0.0.nupkg --api-key $MY_GET_API_KEY --source https://www.myget.org/F/deinok/api/v2/package
            fi
